{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enesm\\\\Desktop\\\\frontend\\\\frontend\\\\src\\\\pages\\\\EmailVerificationPending.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Container, Paper, Typography, Button } from \"@mui/material\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailVerificationPending = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    email\n  } = location.state || {};\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (email) {\n        fetch(`http://localhost:8080/auth/check-verification-status?email=${email}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => response.json()).then(isVerified => {\n          if (isVerified) {\n            navigate(\"/login\");\n          }\n        }).catch(error => {\n          console.error(\"Doğrulama durumu kontrol edilirken hata oluştu:\", error);\n        });\n      }\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [navigate, email]);\n  const handleResendVerification = () => {\n    if (email) {\n      fetch(`http://localhost:8080/auth/resend-verification-email?email=${email}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          alert(\"Doğrulama e-postası yeniden gönderildi!\");\n        } else {\n          alert(\"E-posta yeniden gönderilemedi. Lütfen daha sonra tekrar deneyin.\");\n        }\n      }).catch(error => {\n        console.error(\"Doğrulama e-postası yeniden gönderilirken hata oluştu:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: \"50px 20px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: \"Email Verification Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: \"Please check your email and verify your account. Once verified, you will be redirected to the login page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleResendVerification,\n        children: \"Resend Verification Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailVerificationPending, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EmailVerificationPending;\nexport default EmailVerificationPending;\nvar _c;\n$RefreshReg$(_c, \"EmailVerificationPending\");","map":{"version":3,"names":["React","useEffect","Container","Paper","Typography","Button","useNavigate","useLocation","jsxDEV","_jsxDEV","EmailVerificationPending","_s","navigate","location","email","state","intervalId","setInterval","fetch","method","headers","then","response","json","isVerified","catch","error","console","clearInterval","handleResendVerification","data","success","alert","children","elevation","style","padding","marginTop","variant","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/enesm/Desktop/frontend/frontend/src/pages/EmailVerificationPending.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Container, Paper, Typography, Button } from \"@mui/material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst EmailVerificationPending = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { email } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      if (email) {\r\n        fetch(\r\n          `http://localhost:8080/auth/check-verification-status?email=${email}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((isVerified) => {\r\n            if (isVerified) {\r\n              navigate(\"/login\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\r\n              \"Doğrulama durumu kontrol edilirken hata oluştu:\",\r\n              error\r\n            );\r\n          });\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [navigate, email]);\r\n\r\n  const handleResendVerification = () => {\r\n    if (email) {\r\n      fetch(\r\n        `http://localhost:8080/auth/resend-verification-email?email=${email}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.success) {\r\n            alert(\"Doğrulama e-postası yeniden gönderildi!\");\r\n          } else {\r\n            alert(\r\n              \"E-posta yeniden gönderilemedi. Lütfen daha sonra tekrar deneyin.\"\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            \"Doğrulama e-postası yeniden gönderilirken hata oluştu:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Paper elevation={3} style={{ padding: \"50px 20px\", marginTop: \"20px\" }}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: \"20px\" }}>\r\n          Email Verification Pending\r\n        </Typography>\r\n        <Typography variant=\"body1\" style={{ marginBottom: \"20px\" }}>\r\n          Please check your email and verify your account. Once verified, you\r\n          will be redirected to the login page.\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleResendVerification}\r\n        >\r\n          Resend Verification Email\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EmailVerificationPending;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}